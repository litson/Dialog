{"version":3,"sources":["core.js","helper.js","event.js","operations.js","setting.js","components.js","compatibleAMD.js"],"names":[],"mappingstNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpfile":"jDialog.js","sourcesContent":["var win = window;\r\nvar doc = document;\r\nvar version = '1.0.0';\r\nvar jDialog = function (message, callBack) {\r\n    /**\r\n     *\r\n     */\r\n    return new jDialog.fn.init(message, callBack);\r\n};\r\n\r\njDialog.fn = jDialog.prototype = {\r\n    constructor: jDialog,\r\n    /**\r\n     * @method init\r\n     * @param message\r\n     * @param callBack\r\n     * @returns {jDialog}\r\n     */\r\n    init: function (message, callBack) {\r\n\r\n        this.options = {\r\n            title: '提示', // title\r\n            modal: true, //是否启用模式窗口\r\n            content: '', // messages\r\n            autoHide: 0, // 自动销毁\r\n            fixed: true,\r\n            /**\r\n             *  点击modal不会销毁\r\n             */\r\n            preventHide: false,\r\n            callBack: null\r\n        };\r\n\r\n        this.buttons = [];\r\n\r\n        // 只存活一个dialog\r\n        if (jDialog.currentDialog) {\r\n            jDialog.currentDialog.remove();\r\n        }\r\n\r\n        jDialog.currentDialog = this;\r\n\r\n        if (isPlainObject(message)) {\r\n            jDialog.extend(this.options, message);\r\n\r\n        } else if (/string|number|boolean/gi.test(typeof(message))) {\r\n            this.options.content = message;\r\n            if (isFunction(callBack)) {\r\n                this.options.callBack = callBack;\r\n            }\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n\r\n        return _renderDOM(this);\r\n    }\r\n};\r\n\r\n/**\r\n * 浅copy\r\n * @returns {*|{}}\r\n */\r\njDialog.extend = jDialog.fn.extend = function () {\r\n\r\n    var target = arguments[0] || {};\r\n    var options = arguments[1] || {};\r\n    var name;\r\n    var copy;\r\n\r\n    if (arguments.length === 1) {\r\n        target = this;\r\n        options = arguments[0];\r\n    }\r\n\r\n    for (name in options) {\r\n        copy = options[name];\r\n        if (copy !== undefined) {\r\n            target[name] = copy;\r\n        }\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\n/**\r\n *\r\n * @type {{constructor: Function, init: Function}|jDialog.fn|*}\r\n */\r\njDialog.fn.init.prototype = jDialog.fn;\r\n\r\n/**\r\n *\r\n * @param jDialog\r\n * @private\r\n */\r\nfunction _renderDOM(jDialog) {\r\n    var self = jDialog;\r\n    var wrapper = self.getWrapper();\r\n    var options = self.options;\r\n\r\n    wrapper\r\n        .appendChild(self.getHeader());\r\n    wrapper\r\n        .appendChild(self.getContainer());\r\n    wrapper\r\n        .appendChild(self.getFooter());\r\n\r\n\r\n    if (options.title === '') {\r\n        self.hideHeader();\r\n    }\r\n\r\n    self.title(options.title);\r\n\r\n    //\r\n    self.content(options.content);\r\n\r\n    self.addButton('取消', 'destory', function () {\r\n        self.remove();\r\n    });\r\n\r\n    //\r\n    if (options.modal) {\r\n        self.showModal();\r\n    }\r\n\r\n    if (options.autoHide) {\r\n        self.autoHide(options.autoHide);\r\n    }\r\n\r\n    //\r\n    if (options.callBack) {\r\n        self.addButton('确定', 'apply', options.callBack);\r\n    }\r\n\r\n    wrapper.addEventListener('click', _eventRouter.bind(self), false);\r\n    wrapper.addEventListener('touchstart', _toggleClass, false);\r\n    wrapper.addEventListener('touchend', _toggleClass, false);\r\n\r\n    doc.body.appendChild(wrapper);\r\n\r\n    self.verticalInViewPort(options.fixed)\r\n        .addClass('dialog-zoom-in');\r\n    return self;\r\n}\r\n\r\n/**\r\n *\r\n * @param tagName\r\n * @param attrs\r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\nfunction _createElement(tagName, attrs) {\r\n    var element = doc.createElement(tagName);\r\n    jDialog.extend(element, attrs);\r\n    return element;\r\n}\r\n\r\n/**\r\n *\r\n * @param event\r\n * @private\r\n */\r\nfunction _eventRouter(event) {\r\n    var target = event.target;\r\n    var actionName = target.getAttribute('data-dialog-action');\r\n    if (!actionName) {\r\n        return;\r\n    }\r\n    jDialog.event.fire(actionName, target);\r\n}\r\n\r\n/**\r\n *\r\n * @param event\r\n * @private\r\n */\r\nfunction _toggleClass(event) {\r\n    var target = event.target;\r\n    var actionName = target.getAttribute('data-dialog-action');\r\n    if (!actionName) {\r\n        return;\r\n    }\r\n    target.classList.toggle('active');\r\n}\r\n\r\n/**\r\n *\r\n * @param context\r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\nfunction _createModal(context) {\r\n    var self = context;\r\n    var element = _createElement('div');\r\n    element.style.cssText =\r\n        ';background:rgba(0,0,0,0.3);width:100%;'\r\n        + 'position:absolute;left:0;top:0;'\r\n        + 'height:'\r\n        + Math.max(doc.documentElement.scrollHeight, doc.body.scrollHeight)\r\n        + 'px;z-index:'\r\n        + (self.currentDOMIndex - 1);\r\n\r\n    element.onclick = function () {\r\n        if (!self.options.preventHide) {\r\n            jDialog.event.fire('destory');\r\n        }\r\n    };\r\n\r\n    return doc.body.appendChild(element)\r\n}\r\n\r\n","/**\r\n *\r\n * @param fn\r\n * @returns {boolean}\r\n */\r\nfunction isFunction(fn) {\r\n    return Object.prototype.toString.call(fn) === '[object Function]';\r\n}\r\n\r\n/**\r\n *\r\n * @param obj\r\n * @returns {boolean}\r\n */\r\nfunction isPlainObject(obj) {\r\n    if (obj === null || obj === undefined) {\r\n        return false;\r\n    }\r\n    return obj.constructor == {}.constructor;\r\n}\r\n\r\n/**\r\n *\r\n * @param url\r\n * @returns {boolean}\r\n */\r\n//function isUrl(url) {\r\n//    var regexp =\r\n//        /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n//    return regexp.test(url);\r\n//}\r\n\r\njDialog.extend({\r\n    /**\r\n     * 顶级缓存对象，目前没什么用\r\n     */\r\n    expando: \"jDialog\" + (version + Math.random()).replace(/\\D/g, '')\r\n});\r\n","jDialog.event = {\r\n    actions: {},\r\n    add: function (actionName, handler) {\r\n\r\n        if (isFunction(handler)) {\r\n            this.actions[actionName] = handler;\r\n        }\r\n\r\n        return this;\r\n    },\r\n    remove: function (actionName) {\r\n        if (this.has(actionName)) {\r\n            return delete this.actions[actionName];\r\n        }\r\n        console.warn(actionName + '不存在');\r\n        return false;\r\n    },\r\n    has: function (actionName) {\r\n        if (typeof actionName !== 'string' || !this.actions[actionName]) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    once: function (actionName) {\r\n        if (this.has(actionName)) {\r\n            this.fire(actionName)\r\n                .remove(actionName);\r\n        }\r\n        return this;\r\n    },\r\n    fire: function (actionName, context) {\r\n        if (this.has(actionName)) {\r\n            this.actions[actionName].call(context || win);\r\n        }\r\n        return this;\r\n    }\r\n};\r\n","jDialog.fn.extend({\r\n\r\n    /**\r\n     * 保证 position:fixed 的dialog永远处于视口内；\r\n     * @param useFixed\r\n     * @returns {*}\r\n     */\r\n    verticalInViewPort: function (useFixed) {\r\n        var docElement = doc.documentElement;\r\n        var clientHeight = docElement.clientHeight;\r\n        var dialogHeight = this.height();\r\n\r\n        if (useFixed) {\r\n\r\n            if (dialogHeight > clientHeight) {\r\n                dialogHeight = 0.75 * clientHeight;\r\n                this.getContainer().style.height =\r\n                    dialogHeight - (this.height(this.getHeader()) + this.height(this.getFooter())) + 'px';\r\n            }\r\n            this.height(dialogHeight)\r\n                .toggleLockBody(true)\r\n                .extend(this.getWrapper().style, {\r\n                    position: 'fixed',\r\n                    marginTop: (-dialogHeight / 2) + \"px\",\r\n                    top: \"50%\"\r\n                });\r\n\r\n        } else {\r\n\r\n            // 矫情，明知道webkit取scrollTop是从body取，还要这么做\r\n            var scrollTop = Math.max(doc.body.scrollTop, docElement.scrollTop);\r\n            var top = Math.max((clientHeight - dialogHeight) * 382 / 1000 + scrollTop, scrollTop);\r\n\r\n            this.top(top)\r\n                .height('auto')\r\n                .toggleLockBody(false)\r\n                .getContainer().style.height = 'auto';\r\n\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 锁住body的scroll，不让其滚动；\r\n     * @param useLock\r\n     */\r\n    toggleLockBody: function (useLock) {\r\n\r\n        var header = this.getHeader();\r\n        var footer = this.getFooter();\r\n        var modal = this.getModal();\r\n        var ev = 'ontouchmove';\r\n\r\n        header[ev] = footer[ev] = modal[ev] = useLock ? function () {\r\n            return false;\r\n        } : null;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     *  获取dialog的DOM结构\r\n     * @returns {HTMLElement|*|wrapper}\r\n     */\r\n    getWrapper: function () {\r\n        if (!this.wrapper) {\r\n\r\n            this.wrapper = _createElement('div', {\r\n                className: 'dialog'\r\n            });\r\n\r\n            this.wrapper.style.zIndex = this.currentDOMIndex = 614;\r\n        }\r\n\r\n        return this.wrapper;\r\n    },\r\n\r\n    /**\r\n     *  获取页头的DOM结构\r\n     * @returns {HTMLElement|*|header}\r\n     */\r\n    getHeader: function () {\r\n        return this.header ? this.header : this.header = _createElement('div', {\r\n            className: 'dialog-header'\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 隐藏页头\r\n     * @returns {*}\r\n     */\r\n    hideHeader: function () {\r\n        var header = this.getHeader();\r\n        var height = this.height(header);\r\n        this.height(this.height() - height);\r\n        header.style.display = 'none';\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 获取当前dialog内容的DOM结构\r\n     * @returns {HTMLElement|*|container}\r\n     */\r\n    getContainer: function () {\r\n        return this.container ? this.container : this.container = _createElement('div', {\r\n            className: 'dialog-body'\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 获取页尾的dom结构\r\n     * @returns {HTMLElement|*|footer}\r\n     */\r\n    getFooter: function () {\r\n        return this.footer ? this.footer : this.footer = _createElement('div', {\r\n            className: 'dialog-footer'\r\n        });\r\n    },\r\n\r\n    /**\r\n     * 隐藏页尾\r\n     * @returns {*}\r\n     */\r\n    hideFooter: function () {\r\n        var footer = this.getFooter();\r\n        var height = this.height(footer);\r\n        this.height(this.height() - height);\r\n        footer.style.display = 'none';\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 添加按钮及事件\r\n     * @method addButton\r\n     * @param text\r\n     * @param actionName\r\n     * @param handler\r\n     * @returns {*}\r\n     */\r\n    addButton: function (text, actionName, handler) {\r\n\r\n        // 模拟重载\r\n        var fnKey = (\"jDialog\" + Math.random()).replace(/\\D/g, '');\r\n\r\n        var defaultText = '确定';\r\n\r\n        // 如果第一个参数是一个function\r\n        if (isFunction(text)) {\r\n            return this.addButton(defaultText, actionName || fnKey, text);\r\n        }\r\n\r\n        if (isFunction(actionName)) {\r\n            return this.addButton(text, fnKey, actionName);\r\n        }\r\n\r\n\r\n        var element = _createElement('a', {\r\n            href: 'javascript:;',\r\n            className: 'dialog-btn',\r\n            innerHTML: text || defaultText\r\n        });\r\n\r\n        if (!actionName) {\r\n            actionName = \"destory\";\r\n        } else {\r\n            jDialog.event.add(actionName, handler);\r\n        }\r\n\r\n        element.setAttribute('data-dialog-action', actionName);\r\n\r\n        var footer = this.getFooter();\r\n        if (this.buttons.length) {\r\n            this.addClass(\"dialog-btn-primary\", element);\r\n            footer.insertBefore(element, footer.childNodes.item(0));\r\n        } else {\r\n            footer.appendChild(element);\r\n        }\r\n        this.buttons.push(element);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 如果保证每个按钮对应队里的action，则可放心移除button\r\n     * @param index\r\n     * @returns {*}\r\n     */\r\n    delButton: function (index) {\r\n        var button = this.getButton(index);\r\n        var actionName;\r\n        if (button) {\r\n            actionName = button.getAttribute('data-dialog-action');\r\n            (actionName != 'destory') && jDialog.event.remove(actionName);\r\n            this.getFooter().removeChild(button);\r\n            var i = this.buttons.indexOf(button);\r\n            this.buttons.splice(i, 1);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param index\r\n     * @returns {*}\r\n     */\r\n    getButton: function (index) {\r\n        var buttons = this.buttons.slice().reverse();\r\n        if (buttons[index]) {\r\n            return buttons[index];\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * 为当前dialog添加class\r\n     * @param className\r\n     * @returns {*}\r\n     */\r\n    addClass: function (className, context) {\r\n\r\n        context = context || this.getWrapper();\r\n\r\n        if (context.nodeType === 1 && typeof className === 'string') {\r\n            context.classList.add(className);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 为当前dialog添加remove\r\n     * @param className\r\n     */\r\n    removeClass: function (className, context) {\r\n\r\n        context = context || this.getWrapper();\r\n\r\n        if (context.nodeType === 1 && typeof className === 'string') {\r\n            context.classList.remove(className);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 设置自动隐藏时间\r\n     * @param delay  为0，直接销毁；不设置，采用默认用户设置；\r\n     * @returns {*}\r\n     */\r\n    autoHide: function (delay) {\r\n        if (!jDialog.currentDialog) {\r\n            return this;\r\n        }\r\n\r\n        // 0则自动销毁；\r\n        if (delay == 0) {\r\n            return this.remove();\r\n        }\r\n\r\n        //\r\n        if (delay === undefined) {\r\n            return this.autoHide(this.options.autoHide);\r\n        }\r\n\r\n        // 将会已最新的delay为准\r\n        if (this.autoHideTimer) {\r\n            clearTimeout(this.autoHideTimer);\r\n        }\r\n\r\n        this.autoHideTimer = setTimeout(function () {\r\n            this.remove();\r\n            clearTimeout(this.autoHideTimer);\r\n            this.autoHideTimer = null;\r\n        }.bind(this), delay * 1000);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @returns {*}\r\n     */\r\n    remove: function () {\r\n\r\n        this.toggleLockBody(false);\r\n\r\n        if (this.wrapper) {\r\n            this.wrapper.removeEventListener('click', _eventRouter, false);\r\n            this.wrapper.removeEventListener('touchstart', _toggleClass, false);\r\n            this.wrapper.removeEventListener('touchend', _toggleClass, false);\r\n            doc.body.removeChild(this.wrapper);\r\n        }\r\n\r\n        if (this.modal) {\r\n            this.modal.onclick = null;\r\n            doc.body.removeChild(this.modal);\r\n        }\r\n\r\n        if (this.autoHideTimer) {\r\n            clearTimeout(this.autoHideTimer);\r\n        }\r\n\r\n        jDialog.currentDialog\r\n            = this.buttons\r\n            = this.container\r\n            = this.footer\r\n            = this.header\r\n            = this.options\r\n            = this.wrapper\r\n            = this.modal\r\n            = null;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 获取当前dialog的Modal的DOM结构\r\n     * @returns {modal|*}\r\n     */\r\n    getModal: function () {\r\n        if (!this.modal) {\r\n            this.modal = _createModal(this);\r\n        }\r\n        return this.modal;\r\n    },\r\n\r\n    /**\r\n     * 隐藏当前dialog的Modal\r\n     * @returns {*}\r\n     */\r\n    hideModal: function () {\r\n        this.getModal().style.display = 'none';\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 显示当前dialog的Modal\r\n     * @returns {*}\r\n     */\r\n    showModal: function () {\r\n        this.getModal().style.display = '';\r\n        return this;\r\n    },\r\n\r\n    getCloseBtn: function () {\r\n        if (!this.closeBtn) {\r\n            this.closeBtn = _createElement('span', {\r\n                innerHTML: '关闭',\r\n                'data-dialog-action': 'destory',\r\n                className: 'dialog-btn-dismiss'\r\n            });\r\n        }\r\n        return this.closeBtn;\r\n    }\r\n});\r\n","/**\r\n *  设置函数集\r\n * @param number\r\n * @returns {*}\r\n */\r\nvar addPixelUnit = function (number) {\r\n    if (!/em|px|rem|pt|%|auto/gi.test(number)) {\r\n        number = number + 'px';\r\n    }\r\n    return number;\r\n};\r\n\r\njDialog.fn.extend({\r\n\r\n    /**\r\n     * 返回当前的title或为dialog设置title\r\n     * @param text\r\n     * @returns {*}\r\n     */\r\n    title: function (value) {\r\n        if (typeof value === 'undefined') {\r\n            return this.options.title;\r\n        }\r\n\r\n        this.getHeader().innerHTML = this.options.title = value;\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 返回当前设置的content或设置content\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    content: function (value) {\r\n        if (typeof value === 'undefined') {\r\n            return this.options.content;\r\n        }\r\n        this.getContainer().innerHTML = this.options.content = value;\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 返回当前的height或为dialog设置height\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    height: function (value) {\r\n\r\n        if (typeof value === 'undefined') {\r\n            return this.height(this.getWrapper());\r\n        }\r\n\r\n        if (value.nodeType === 1) {\r\n            return value.offsetHeight;\r\n        }\r\n\r\n        this.wrapper.style.height = addPixelUnit(value);\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 返回当前dialog的宽度或为dialog设置宽度\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    width: function (value) {\r\n        if (typeof value === 'undefined') {\r\n            return this.width(this.getWrapper());\r\n        }\r\n\r\n        if (value.nodeType === 1) {\r\n            return value.offsetWidth;\r\n        }\r\n\r\n        jDialog.extend(this.wrapper.style, {\r\n            width: addPixelUnit(value),\r\n            marginLeft: addPixelUnit(-(parseFloat(value) / 2))\r\n        });\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 返回当前的z-index值或为dialog设置z-index\r\n     * @param index\r\n     * @returns {*}\r\n     */\r\n    index: function (value) {\r\n        if (typeof value === 'undefined') {\r\n            return this.currentDOMIndex;\r\n        }\r\n        this.currentDOMIndex = value;\r\n        this.wrapper.style.zIndex = this.currentDOMIndex;\r\n        // 永远比wrapper小1\r\n        this.getModal().style.zIndex = this.currentDOMIndex - 1;\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 返回当前的top值或者为dialog设置top\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    top: function (value) {\r\n\r\n        if (typeof value === 'undefined') {\r\n            return win.getComputedStyle(this.getWrapper()).top;\r\n        }\r\n\r\n        jDialog.extend(this.wrapper.style, {\r\n            top: addPixelUnit(value),\r\n            marginTop: ''\r\n        });\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * 相对于视口，还是相对于文档流\r\n     * @param isUse\r\n     * @returns {*}\r\n     */\r\n    fixed: function (isUse) {\r\n        var flag = true;\r\n        if (!isUse || (typeof isUse !== \"undefined\")) {\r\n            flag = false;\r\n            this.getWrapper().style.position = 'absolute';\r\n        }\r\n        return this.verticalInViewPort(flag);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @returns {preventHide}\r\n     */\r\n    preventHide: function () {\r\n        this.options.preventHide = true;\r\n        return this;\r\n    }\r\n});\r\n","/**\r\n *  封装一些常用的dialog\r\n */\r\njDialog.extend({\r\n    alert: function (message) {\r\n        return jDialog(message);\r\n    },\r\n    toast: function (message, delay) {\r\n        var dialog = jDialog(message)\r\n            .addClass('dialog-toast');\r\n        var container = dialog.getContainer();\r\n        var height = dialog.height(container);\r\n        dialog.getContainer().style.textAlign = 'center';\r\n        dialog\r\n            .hideFooter()\r\n            .hideHeader()\r\n            .hideModal()\r\n            .height(height)\r\n            .autoHide(delay || 3);\r\n        return dialog;\r\n    },\r\n    error: function (message, callBack) {\r\n        return jDialog(message, callBack).addClass('dialog-error');\r\n    }\r\n});\r\n","if (typeof define === \"function\" && define.amd) {\r\n    define(\"jdialog\", [], function() {\r\n        return jDialog;\r\n    });\r\n} else {\r\n    win.jDialog = jDialog;\r\n}\r\n"],"sourceRoot":"/source/"}